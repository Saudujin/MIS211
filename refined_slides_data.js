const refinedSlidesData = [
      {slide:1,title:"Introduction to Computers and Programming",literal_translation:"مقدمة إلى أجهزة الحاسوب والبرمجة",explanation:"تقدم هذه الشريحة مقدمة شاملة لأجهزة الحاسوب والبرمجة، وتعتبر نقطة الانطلاق للفصل الأول من كتاب برمجة بايثون."},
      {slide:2,title:"Chapter Topics",literal_translation:"مواضيع الفصل:\n• مقدمة في الحواسيب\n• البرامج ولغات البرمجة\n• ما هو البرنامج؟\n• الإدخال، المعالجة، والإخراج\n• عملية البرمجة\n• لغات البرمجة",explanation:"تستعرض هذه الشريحة قائمة بالمواضيع التي سيتم تناولها في هذا الفصل، بما في ذلك مكونات الحاسوب، أنواع البرمجيات، وكيفية عمل البرامج."},
      {slide:3,title:"Why Program?",literal_translation:"لماذا البرمجة؟\n• يمكن للحاسوب أداء مهام متنوعة لأنه قابل للبرمجة\n• الحاسوب مصمم لاتباع التعليمات\n• البرنامج: مجموعة من التعليمات التي يتبعها الحاسوب لأداء مهمة معينة\n• المبرمج: شخص يكتب التعليمات التي يتبعها الحاسوب\n• البرمجة: عملية إنشاء البرامج",explanation:"توضح هذه الشريحة أهمية البرمجة وتعرف المفاهيم الأساسية مثل البرنامج، المبرمج، والبرمجة. الحاسوب قابل للبرمجة، مما يمكنه من أداء مهام متنوعة."},
      {slide:4,title:"Computer Systems: Hardware",literal_translation:"أنظمة الحاسوب: العتاد الصلب (Hardware)\n• العتاد: المكونات المادية للحاسوب\n• وحدة المعالجة المركزية (CPU)\n• الذاكرة الرئيسية (RAM)\n• وحدات التخزين الثانوية\n• أجهزة الإدخال\n• أجهزة الإخراج",explanation:"تعرض هذه الشريحة المكونات الأساسية للعتاد الصلب للحاسوب، بما في ذلك المعالج، الذاكرة، وأجهزة الإدخال والإخراج."},
      {slide:5,title:"Computer Systems: Hardware (cont'd.)",literal_translation:"أنظمة الحاسوب: العتاد الصلب (تابع)\n• وحدة المعالجة المركزية (CPU): هي الجزء من الحاسوب الذي يقوم بتشغيل البرامج\n• الذاكرة الرئيسية: تعرف أيضاً بـ RAM، وتحتوي على البرنامج الحالي والبيانات التي يستخدمها\n• متطايرة: تفقد محتوياتها عند إيقاف تشغيل الحاسوب",explanation:"تتوسع هذه الشريحة في شرح وحدة المعالجة المركزية والذاكرة الرئيسية، مع التأكيد على أن الذاكرة الرئيسية متطايرة."},
      {slide:6,title:"Computer Systems: Hardware (cont'd.)",literal_translation:"أنظمة الحاسوب: العتاد الصلب (تابع)\n• وحدات التخزين الثانوية: يمكنها الاحتفاظ بالبيانات لفترات طويلة، وهي غير متطايرة\n• أمثلة: القرص الصلب، القرص المضغوط، قرص DVD، ذاكرة فلاش\n• أجهزة الإدخال: تجمع البيانات من العالم الخارجي وترسلها إلى الحاسوب\n• أمثلة: لوحة المفاتيح، الفأرة، الشاشة التي تعمل باللمس، الكاميرا",explanation:"تشرح هذه الشريحة وحدات التخزين الثانوية وأجهزة الإدخال، مع تقديم أمثلة عملية لكل منها."},
      {slide:7,title:"Computer Systems: Hardware (cont'd.)",literal_translation:"أنظمة الحاسوب: العتاد الصلب (تابع)\n• أجهزة الإخراج: تنسق البيانات وتعرضها\n• أمثلة: الشاشة، الطابعة\n• تتدفق البيانات من أجهزة الإدخال عبر وحدة المعالجة المركزية إلى أجهزة الإخراج",explanation:"تكمل هذه الشريحة شرح مكونات العتاد الصلب بالحديث عن أجهزة الإخراج ومسار تدفق البيانات في النظام."},
      {slide:8,title:"Computer Systems: Software",literal_translation:"أنظمة الحاسوب: البرمجيات (Software)\n• البرمجيات: هي البرامج التي تعمل على الحاسوب\n• هناك فئتان من البرمجيات:\n  - برمجيات النظام\n  - برمجيات التطبيقات",explanation:"تقدم هذه الشريحة مفهوم البرمجيات وتقسمها إلى فئتين رئيسيتين: برمجيات النظام وبرمجيات التطبيقات."},
      {slide:9,title:"Computer Systems: Software (cont'd.)",literal_translation:"أنظمة الحاسوب: البرمجيات (تابع)\n• برمجيات النظام: هي البرامج التي تتحكم وتدير العمليات الأساسية للحاسوب\n• نظام التشغيل: يتحكم في العمليات الداخلية للحاسوب ويدير العتاد\n• البرامج المساعدة: تؤدي مهام متخصصة للمساعدة في تشغيل الحاسوب",explanation:"تشرح هذه الشريحة برمجيات النظام، مع التركيز على دور نظام التشغيل والبرامج المساعدة."},
      {slide:10,title:"Computer Systems: Software (cont'd.)",literal_translation:"أنظمة الحاسوب: البرمجيات (تابع)\n• برمجيات التطبيقات: هي البرامج التي تحل مشاكل العالم الحقيقي للمستخدمين\n• أمثلة: معالج النصوص، جداول البيانات، الألعاب، متصفح الويب\n• هي البرامج التي تستخدمها بشكل يومي",explanation:"توضح هذه الشريحة برمجيات التطبيقات، مع أمثلة شائعة مثل معالجات النصوص والألعاب."},
      {slide:11,title:"How Computers Store Data",literal_translation:"كيفية تخزين البيانات في الحاسوب\n• كل البيانات المخزنة في الحاسوب يتم تحويلها إلى تسلسل من الأصفار والآحاد\n• البت (Bit): أصغر وحدة بيانات، وقيمتها إما 0 أو 1\n• البايت (Byte): مجموعة من 8 بتات\n• يمكن تخزين أي عدد من البتات في الذاكرة الرئيسية أو الثانوية",explanation:"تشرح هذه الشريحة كيفية تخزين البيانات في الحاسوب باستخدام النظام الثنائي (البتات والبايتات). "},
      {slide:12,title:"Storing Numbers",literal_translation:"تخزين الأرقام\n• تستخدم البتات لتمثيل الأرقام في النظام الثنائي\n• النظام الثنائي: نظام عددي يستخدم فقط 0 و 1\n• يتم تحويل الأرقام من النظام العشري إلى النظام الثنائي لتخزينها في الحاسوب",explanation:"توضح هذه الشريحة كيفية تمثيل الأرقام وتخزينها في الحاسوب باستخدام النظام الثنائي."},
      {slide:13,title:"Storing Characters",literal_translation:"تخزين الحروف\n• يتم تخزين جميع الحروف كنصوص مرمزة عددياً\n• ASCII: هو نظام ترميز يحدد رموزاً لـ 128 حرفاً\n• Unicode: هو نظام ترميز موسع ومتوافق مع ASCII، ويمكنه تمثيل أحرف من جميع لغات العالم",explanation:"تشرح هذه الشريحة كيفية تخزين الحروف كنصوص، مع ذكر أنظمة الترميز ASCII و Unicode."},
      {slide:14,title:"Advanced Number Storage",literal_translation:"التخزين المتقدم للأرقام\n• لتخزين الأعداد السالبة والأرقام الحقيقية، يستخدم الحاسوب طرق ترميز خاصة\n• الأعداد السالبة: تستخدم طريقة المتمم الثنائي\n• الأرقام الحقيقية: تستخدم طريقة الفاصلة العائمة",explanation:"توضح هذه الشريحة التقنيات المستخدمة لتخزين الأعداد السالبة والأرقام الحقيقية (ذات الفاصلة العائمة). "},
      {slide:15,title:"How a Program Works",literal_translation:"كيف يعمل البرنامج\n• تم تصميم وحدة المعالجة المركزية لمعالجة التعليمات بلغة الآلة\n• دورة الجلب-فك التشفير-التنفيذ:\n  - الجلب (Fetch): جلب التعليمة التالية من الذاكرة\n  - فك التشفير (Decode): فك تشفير التعليمة لتحديد العملية المطلوبة\n  - التنفيذ (Execute): تنفيذ العملية",explanation:"تشرح هذه الشريحة دورة عمل وحدة المعالجة المركزية (الجلب، فك التشفير، التنفيذ) لمعالجة تعليمات لغة الآلة."},
      {slide:16,title:"From Machine Language to Assembly Language",literal_translation:"من لغة الآلة إلى لغة التجميع\n• لغة الآلة صعبة الكتابة (تسلسل من الأصفار والآحاد)\n• لغة التجميع: تستخدم كلمات مختصرة (mnemonics) للتعليمات\n• المجمّع (Assembler): يترجم برنامج لغة التجميع إلى برنامج بلغة الآلة",explanation:"توضح هذه الشريحة الانتقال من لغة الآلة إلى لغة التجميع، ودور المجمّع في عملية الترجمة."},
      {slide:17,title:"High-Level Languages",literal_translation:"لغات البرمجة عالية المستوى\n• تسمح بإنشاء برامج معقدة بسهولة أكبر\n• تستخدم كلمات شبيهة باللغة الإنجليزية\n• أمثلة: Python, C++, Java\n• المترجم (Compiler) أو المفسر (Interpreter) يترجم البرنامج عالي المستوى إلى لغة الآلة",explanation:"تقدم هذه الشريحة لغات البرمجة عالية المستوى، مع ذكر أمثلة ودور المترجمات والمفسرات."},
      {slide:18,title:"Compilers and Interpreters",literal_translation:"المترجمات والمفسرات\n• المترجم (Compiler): يترجم البرنامج عالي المستوى بالكامل إلى ملف تنفيذي منفصل يمكن تشغيله لاحقاً\n• المفسر (Interpreter): يترجم وينفذ البرنامج عالي المستوى سطراً بسطر",explanation:"تقارن هذه الشريحة بين المترجمات والمفسرات، موضحة الفروق الرئيسية في عملية الترجمة والتنفيذ."},
      {slide:19,title:"Keywords, Operators, and Syntax",literal_translation:"الكلمات المفتاحية، المعاملات، وقواعد النحو\n• الكلمات المفتاحية (Keywords): كلمات محجوزة لها معنى خاص في لغة البرمجة\n• المعاملات (Operators): رموز تؤدي عمليات محددة على البيانات\n• قواعد النحو (Syntax): مجموعة القواعد التي يجب اتباعها عند كتابة البرنامج",explanation:"تعرف هذه الشريحة المفاهيم الأساسية في لغات البرمجة: الكلمات المفتاحية، المعاملات، وقواعد النحو."},
      {slide:20,title:"Statement and Comments",literal_translation:"الجملة والتعليقات\n• الجملة (Statement): تعليمة كاملة تؤدي إجراءً محدداً\n• التعليقات (Comments): ملاحظات يكتبها المبرمج في الكود، ويتجاهلها المترجم أو المفسر",explanation:"توضح هذه الشريحة الفرق بين الجمل البرمجية والتعليقات، وأهمية التعليقات في توضيح الكود."},
      {slide:21,title:"The Programming Process",literal_translation:"عملية البرمجة\n1. تصميم البرنامج\n2. كتابة الكود\n3. تصحيح الأخطاء النحوية\n4. اختبار البرنامج\n5. تصحيح الأخطاء المنطقية",explanation:"تعرض هذه الشريحة الخطوات الخمس الرئيسية في عملية تطوير البرمجيات، من التصميم إلى تصحيح الأخطاء."},
      {slide:22,title:"What is a Program Made of?",literal_translation:"مما يتكون البرنامج؟\n• الكلمات المفتاحية\n• المعاملات\n• علامات الترقيم\n• تعريفات المبرمج",explanation:"تعدد هذه الشريحة المكونات الأساسية التي يتألف منها أي برنامج حاسوبي."},
      {slide:23,title:"Input, Processing, and Output",literal_translation:"الإدخال، المعالجة، والإخراج\n• الإدخال (Input): البيانات التي يستقبلها البرنامج\n• المعالجة (Processing): العمليات التي يجريها البرنامج على بيانات الإدخال\n• الإخراج (Output): نتيجة المعالجة التي يرسلها البرنامج",explanation:"تشرح هذه الشريحة المراحل الثلاث الأساسية لعمل أي برنامج: الإدخال، المعالجة، والإخراج."},
      {slide:24,title:"The Programming Process in Detail",literal_translation:"عملية البرمجة بالتفصيل\n• فهم المهمة التي سيؤديها البرنامج\n• تصور كيفية تفاعل المستخدم مع البرنامج\n• تحديد خطوات المعالجة الرئيسية",explanation:"تتوسع هذه الشريحة في شرح مرحلة تصميم البرنامج، مع التركيز على فهم المتطلبات وتصور تفاعل المستخدم."},
      {slide:25,title:"Using Python",literal_translation:"استخدام لغة بايثون\n• بايثون هي لغة برمجة عالية المستوى ومفسرة\n• تتميز ببساطة قواعد النحو وسهولة القراءة\n• مثالية للمبتدئين والمحترفين على حد سواء",explanation:"تقدم هذه الشريحة لغة بايثون، مع تسليط الضوء على مميزاتها كلغة مفسرة وسهلة التعلم."},
      {slide:26,title:"Writing Your First Python Program",literal_translation:"كتابة أول برنامج لك بلغة بايثون\n• افتح بيئة التطوير المتكاملة (IDLE)\n• اكتب الكود التالي:\n  print('Hello, World!')\n• احفظ الملف ثم قم بتشغيله",explanation:"تقدم هذه الشريحة خطوات عملية لكتابة وتشغيل أول برنامج بلغة بايثون باستخدام بيئة IDLE."},
      {slide:27,title:"Elements of a Python Program",literal_translation:"عناصر برنامج بايثون\n• تتكون برامج بايثون من جمل (statements)\n• تستخدم دالة print() لعرض المخرجات على الشاشة\n• توضع النصوص بين علامتي اقتباس",explanation:"توضح هذه الشريحة بعض العناصر الأساسية في برنامج بايثون، مثل الجمل، دالة print()، والنصوص."},
      {slide:28,title:"Variables and Data Types",literal_translation:"المتغيرات وأنواع البيانات\n• المتغير (Variable): اسم يشير إلى قيمة مخزنة في ذاكرة الحاسوب\n• أنواع البيانات (Data Types): تصنيف للبيانات يحدد العمليات الممكنة عليها\n• أمثلة: الأعداد الصحيحة (int)، الأعداد الحقيقية (float)، النصوص (str)",explanation:"تعرف هذه الشريحة المتغيرات وأنواع البيانات في بايثون، مع أمثلة شائعة."},
      {slide:29,title:"Getting Input from the User",literal_translation:"الحصول على مدخلات من المستخدم\n• تستخدم دالة input() لقراءة مدخلات من المستخدم\n• تكون المدخلات دائماً من نوع نص (string)\n• يجب تحويلها إلى أرقام إذا لزم الأمر",explanation:"تشرح هذه الشريحة كيفية الحصول على مدخلات من المستخدم باستخدام دالة input()، مع ملاحظة هامة حول نوع البيانات."},
      {slide:30,title:"Performing Calculations",literal_translation:"إجراء العمليات الحسابية\n• تستخدم المعاملات الحسابية (+, -, *, /) لإجراء العمليات الحسابية\n• يمكن استخدام الأقواس لتحديد أولوية تنفيذ العمليات\n• مثال: `result = (x + y) * 2`",explanation:"توضح هذه الشريحة كيفية إجراء العمليات الحسابية في بايثون باستخدام المعاملات الرياضية والأقواس."}
];
